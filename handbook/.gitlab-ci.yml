default:
  image: registry.ilis.cn/uhb/cordova
  cache: &cache
    paths:
      - node_modules/
      - platforms/
      - plugins/
    policy: pull
  before_script:
    - export HTTP_PROXY=$PROXY HTTPS_PROXY=$PROXY
    - npm config set registry https://registry.npmmirror.com
    - GRADLE_USER_HOME="$(pwd)/.gradle"
    - export GRADLE_USER_HOME
  retry: 2

stages:
  - prepare
  - lint
  - test
  - build
  - release

workflow:
  rules:
    - when: always

.if-on-default-branch: &if-on-default-branch
  if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
.if-on-default-branch-sources-change: &if-on-default-branch-sources-change
  <<: *if-on-default-branch
  changes:
    - src/**/*
    - packages/**/*
    - public/*.js
.if-on-merge-request: &if-on-merge-request
  if: $CI_PIPELINE_SOURCE == "merge_request_event"
.if-branch-pipeline: &if-branch-pipeline
  if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH || $CI_PIPELINE_SOURCE == "merge_request_event"
.if-web-trigger: &if-web-trigger
  if: $CI_PIPELINE_SOURCE == "web"
  when: manual
.never-on-tag: &never-on-tag
  if: $CI_COMMIT_TAG
  when: never
.android-build:
  cache:
    - <<: *cache
    - key: cordova_android
      paths:
        - .gradle/

npm:install:
  stage: prepare
  cache:
    <<: *cache
    policy: pull-push
  script:
    - npm install
  rules:
    - <<: *if-branch-pipeline

# The command `cordova prepare` couldn't install the udr plugin correctly, so we must manually install it first
cordova:prepare:
  stage: prepare
  needs:
    - job: npm:install
  cache:
    <<: *cache
    policy: pull-push
  script:
    - mkdir -p www
    # prevent cache volume lost
    - cordova plugin add ./udr/
    - cordova plugin rm cordova-plugin-udr
    - cordova plugin add ./udr/
    - cordova prepare
  rules:
    - <<: *if-branch-pipeline

staging:prepare:
  stage: prepare
  needs:
    - job: npm:install
  image: registry.ilis.cn/uhb/release-cli
  script:
    - npm i
    # Environment variables set in before_script or script are not available for expanding in the same job.
    - tsx ./scripts/prerelease.ts --version $(git describe --tags --abbrev=0)
  artifacts:
    reports:
      dotenv: variables.env
  rules:
    - <<: *if-branch-pipeline
    - <<: *never-on-tag

lint:
  stage: lint
  script:
    - npm run lint
  rules:
    - <<: *if-on-merge-request
      changes:
        - src/**/*
        - test/**/*
        - packages/**/*

test:
  stage: test
  script:
    # The proxy entry in the npm configuration will honor environment variables such as http(s)_proxy, regardless of
    # whether the npm config is set. However, these variables can somehow affect the MSW mock server.
    - |
      unset HTTP_PROXY
      unset HTTPS_PROXY
      npm config delete https-proxy
      npm test -- --reporter=junit --outputFile=test.xml
  artifacts:
    when: always
    reports:
      junit: test.xml
  rules:
    - <<: *if-on-merge-request
      changes:
        - src/**/*
        - test/**/*
        - packages/**/*
    - <<: *if-web-trigger

test:packages:
  stage: test
  script:
    - npm i
    - npm run test:pkg
  artifacts:
    when: always
    reports:
      junit: packages/**/junitresults.xml
  rules:
    - <<: *if-on-merge-request
      changes:
        - src/**/*
        - test/**/*
        - packages/**/*
    - <<: *if-web-trigger

build:
  stage: build
  script:
    - tsx ./scripts/update-version.ts --version $PRERELEASE_VERSION
    - npm run build -- --mode preview
  artifacts:
    paths:
      - www
    expire_in: 4 hrs
  rules:
    - <<: *if-on-default-branch-sources-change
    - <<: *never-on-tag

build:apk:
  stage: build
  extends: .android-build
  needs:
    - job: staging:prepare
      artifacts: true
    - job: build
      artifacts: true
  script:
    - tsx ./scripts/update-version.ts --version $PRERELEASE_VERSION
    - cordova build android
  artifacts:
    paths:
      - platforms/android/app/build/outputs/apk/debug/app-debug.apk
    expire_in: 4 hrs
  rules:
    - <<: *if-on-default-branch-sources-change
    - <<: *never-on-tag

build:release:
  stage: build
  extends: .android-build
  script:
    - npm run build
    - cordova build android --release
  artifacts:
    paths:
      - platforms/android/app/build/outputs/apk/release/app-release.apk
    expire_in: 4 hrs
  rules:
    - if: $CI_COMMIT_TAG =~ /v?\d+.\d+.\d+$/

staging:
  stage: release
  image: registry.ilis.cn/uhb/release-cli
  needs:
    - job: staging:prepare
      artifacts: true
    - job: build:apk
      artifacts: true
  script:
    - echo Uploading $PRERELEASE_VERSION.apk
    - tsx ./scripts/upload.ts --tag $PRERELEASE_VERSION --path platforms/android/app/build/outputs/apk/debug/app-debug.apk --proxy $PROXY
  release:
    tag_name: v$PRERELEASE_VERSION
    description: $(conventional-changelog -p angular -r 2)
    ref: $CI_COMMIT_SHA
    assets:
      links:
        - name: $PRERELEASE_VERSION.apk
          url: https://auth.qdm123.com/api/ClientSetup/DownLoadSetupClient?PType=ILIS_ELN_DEBUG
          link_type: package
  rules:
    - <<: *if-on-default-branch-sources-change
    - <<: *never-on-tag

release:
  stage: release
  image: registry.ilis.cn/uhb/release-cli
  needs:
    - job: build:release
      artifacts: true
  script:
    - conventional-changelog -p angular -r 2 -o __CHANGELOG.md
    - cat __CHANGELOG.md
    - echo Uploading $CI_COMMIT_TAG.apk
    - tsx ./scripts/upload.ts --tag $CI_COMMIT_TAG --path platforms/android/app/build/outputs/apk/release/app-release.apk --proxy $PROXY
  release:
    tag_name: $CI_COMMIT_TAG
    description: __CHANGELOG.md
    assets:
      links:
        - name: $CI_COMMIT_TAG.apk
          url: https://auth.qdm123.com/api/ClientSetup/DownLoadSetupClient?PType=ILIS_ELN
          link_type: package
  rules:
    # To prevent this tag pipeline triggered by another tag push event.
    # E.g., the staging release creates a Git tag automatically.
    - if: $CI_COMMIT_TAG =~ /v?\d+.\d+.\d+$/
